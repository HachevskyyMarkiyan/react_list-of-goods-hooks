{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","reverse","setReverse","default","sortField","setSortField","visibleGoods","goods","preparedGoods","sort","firstGood","secondGood","name","localeCompare","length","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,qBAAAA,I,eAAAA,I,oBAAAA,M,KAmCE,IAAME,EAAgB,WAC3B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAASH,EAASM,SAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAhCR,SACEC,EACAH,EACAH,GAEA,IAAMO,EAAa,YAAOD,GAqB1B,OAnBIH,IAAcP,EAASM,SACzBK,EAAcC,MAAK,SAACC,EAAWC,GAC7B,OAAQP,GACN,KAAKP,EAASe,KACZ,OAAOF,EAAUG,cAAcF,GAEjC,KAAKd,EAASiB,OACZ,OAAOJ,EAAUI,OAASH,EAAWG,OAEvC,QACE,OAAO,MAKXb,GACFO,EAAcP,UAGTO,EAMcO,CAAiBjB,EAAiBM,EAAWH,GAOlE,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYd,IAAcP,EAASe,OAEvCO,QAAS,kBAAMd,EAAaR,EAASe,OAPvC,iCAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYd,IAAcP,EAASiB,SAEvCK,QAAS,kBAAMd,EAAaR,EAASiB,SAPvC,4BAYA,wBACEG,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAajB,IAEjBkB,QAAS,kBAAiBjB,GAAVD,IAPlB,sBAYEG,GAAaH,IACb,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAhDI,WACZd,EAAaR,EAASM,SACtBD,GAAW,IA2CL,sBAUJ,6BACGI,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YChHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5040fbde.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  default,\n  name,\n  length,\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortField: SortType,\n  reverse: boolean,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField !== SortType.default) {\n    preparedGoods.sort((firstGood, secondGood) => {\n      switch (sortField) {\n        case SortType.name:\n          return firstGood.localeCompare(secondGood);\n\n        case SortType.length:\n          return firstGood.length - secondGood.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [reverse, setReverse] = useState(false);\n  const [sortField, setSortField] = useState(SortType.default);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField, reverse);\n\n  const reset = () => {\n    setSortField(SortType.default);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SortType.name },\n          )}\n          onClick={() => setSortField(SortType.name)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SortType.length },\n          )}\n          onClick={() => setSortField(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !reverse },\n          )}\n          onClick={() => (reverse ? setReverse(false) : setReverse(true))}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}